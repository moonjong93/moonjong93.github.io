<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2017-12-29T13:40:05+09:00</updated><id>/</id><title type="html">MoongJong93</title><subtitle>웹 개발에 관한 이야기, Node.js와 Vue.js를 중점적으로 사용합니다</subtitle><entry><title type="html">Jekyll로 시작하는 블로그 - 에필로그</title><link href="/development/blog/first-blog-with-github-and-jekyll3" rel="alternate" type="text/html" title="Jekyll로 시작하는 블로그 - 에필로그" /><published>2017-12-26T00:00:00+09:00</published><updated>2017-12-26T00:00:00+09:00</updated><id>/development/blog/first-blog-with-github-and-jekyll3</id><content type="html" xml:base="/development/blog/first-blog-with-github-and-jekyll3">&lt;h2 id=&quot;한것도-없이-마지막&quot;&gt;한것도 없이 마지막&lt;/h2&gt;
&lt;p&gt;그렇다 마지막이다 너무 두서 없이 쓴거같고 그냥 휘겨 갈겨 쓴것 같아서 빨리 마무리를 지어야겠다&lt;/p&gt;

&lt;h2 id=&quot;1-jekyll의-liquid-시스템을-대충-알아보자&quot;&gt;1. Jekyll의 Liquid 시스템을 대충 알아보자&lt;/h2&gt;
&lt;p&gt;지킬의 친절한 &lt;a href=&quot;https://jekyllrb-ko.github.io/docs/variables/&quot;&gt;안내 페이지&lt;/a&gt;를 보면 알 수있지만 Liquid 템플릿 시스템(이는 대부분 블로그 플랫폼이 지원하는 언어)이 적용되어있는데 예를들면 _config.yml파일에 name : “Moonjong93”이라고 적용 해두면 어느 페이지에서건&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;site.name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;과 같은 변수로 접근이 가능하다 아주 편리한 시스템인데 이 블로그의 레이아웃을 잠깐 보자면&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div class=&quot;main-container&quot;&amp;gt;
    include top.html
    content
    include copy.html
    include analytics.html
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이런식으로 이루어진 코드가 상당히 많다&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;include는 data안에 넣어둔 파일을 넣을 경우 사용&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;필요할때마다 코드를 불러와서 쓰는건 상당히 불편한데 위와같은 템플릿도 지원하기 때문에 상당히 쉽게 만들 수 있었다.&lt;/p&gt;

&lt;p&gt;예를들면 위에서 top.html을 include하였는데 모든 페이지에서 상단에 있는 ‘Moonjong93과 Abuout’에 접근할 수 있게끔 하나만 만들어두고 어느 레이아웃에도 추가해두었다.&lt;/p&gt;

&lt;h2 id=&quot;2-레이아웃이란&quot;&gt;2. 레이아웃이란?&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;---
layout: index
title : Welcome
--- 
&amp;lt;div class=&quot;container&quot;&amp;gt;
    &amp;lt;div calss=&quot;posts&quot;&amp;gt;
        for post in paginator.posts
        &amp;lt;div class=&quot;post&quot;&amp;gt;
            &amp;lt;a href=&quot; post.url &quot;&amp;gt;&amp;lt;h3 class=&quot;post-title&quot;&amp;gt;post.title&amp;lt;/h3&amp;gt;&amp;lt;/a&amp;gt;
            &amp;lt;p class=&quot;post-subscript&quot;&amp;gt;post.subscript&amp;lt;/p&amp;gt;
            &amp;lt;p class=&quot;post-date&quot;&amp;gt;post.date | date: '%Y-%m-%d'&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        endfor
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;위는 이 페이지에 index즉 제일 첫 페이지 코드의 일부분인데 보면 알다시피 레이아웃은 index 레이아웃을 통한다 index 레이아웃은 모든 전체적인 폼만을 만든다 분리를 하게되면 효율적이게 코드관리가 가능하다&lt;/p&gt;

&lt;p&gt;예를들면 모든 페이지에서 필요한 공통부분은 레이아웃에 미리 저장해둔다 그리고 head태그 역시 레이아웃에 정의해둔다 &lt;strong&gt;변경 되는 부분은 reqiurd 템플릿 문법으로 정의한다&lt;/strong&gt;
페이지 별로 보여지는 title이 다를경우&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: index
title : &quot;hello&quot; // 이 부분을 수정해서 가능해진다
--- 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;이런식으로 편리한 템플릿을 제공하기에 기본 문서만 본다면 누구나 블로그를 만들 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;3-검색엔진-최적화는&quot;&gt;3. 검색엔진 최적화는?&lt;/h2&gt;
&lt;p&gt;처음 이 블로그를 올리고 1주일은 아무글도 구글에 검색되지 않았다 그래서 우선은 네이버 웹마스터를 통해 부족한 부분을 보완했다.
&lt;img src=&quot;/assets/img/postsImg/naver-web-master.png&quot; alt=&quot;네이버 웹마스터 결과 값&quot; /&gt;&lt;/p&gt;

&lt;p&gt;가장 중요했던 부분은 RSS나 sitemap의 제출인데 이것은 _config.yml파일에&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;plugins:
  - jekyll-feed
  - jekyll-sitemap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;구문만 있으면 알아서 생성해주기에 상당히 편했다 바로 어제 저렇게 해서 네이버 웹마스터 최적화 이후 구글에서도 웹마스터 등록후 최적화를 진행했는데 현재 구글 검색결과에 잘 표시되는 것을 확인 할 수 있다&lt;/p&gt;

&lt;p&gt;검색은 Moonjong93으로 하였다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/postsImg/google-serach-after.png&quot; alt=&quot;최근 구글 검색결과 Moonjong93으로&quot; /&gt;&lt;/p&gt;

&lt;p&gt;몇줄의 코드만으로도 검색엔진 친화적 블로그가 완성되었다&lt;/p&gt;

&lt;h2 id=&quot;4-기타-플러그인&quot;&gt;4. 기타 플러그인&lt;/h2&gt;
&lt;p&gt;댓글은 disqus를 사용하고 있다. 커스터 마이징이 사실 거의 불가능하다 싶은데 최근 댓글 목록같은 경우엔 데이터를 조회해서 가져온뒤 css파일로 수정했다.&lt;/p&gt;

&lt;p&gt;댓글에 어느 페이지에서 작성했는지 까지 나오기 때문에 보기가 조금 지저분하다고 느껴서 아예 dispaly: none을 해두고 a태그만 가져온뒤 다시 위에 덮어씌워서 처리했다&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;document.querySelectorAll('li.dsq-widget-item').forEach(function(me){
    var atag = document.createElement('a');
    atag.innerHTML = me.innerHTML;
    atag.setAttribute('class','dsq-coment');
    atag.setAttribute('href',me.childNodes[5].childNodes[2].href);
    me.parentNode.insertBefore(atag, me);
    me.remove();
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;물론 jquery를 사용하면 상당히 편하게 되겟지만 이번 블로그에서는 jquery를 아예 사용하지 않고 만들고 있다.&lt;/p&gt;

&lt;p&gt;그리고 구글의 애널리틱스는 마찬가지로 include폴더에 다운로드 해서 모든 페이지에 inlcude 시켜주었다.&lt;/p&gt;

&lt;h2 id=&quot;5-마무리-하며&quot;&gt;5. 마무리 하며&lt;/h2&gt;
&lt;p&gt;사실 마크업도 모르는 놈이 마크업으로 된 블로그를 만들기까지 굳이 필요없는 짓거리를 이것저것 했다(firebase with vue.js를 하면서)그러나 분명한건 완전히 헛짓거리는 아닌게 이번 경험을 통해 검색엔진을 신경쓰기 위해서 포기해야할 일이라던지(아무도 안보는 블로그가 대체 무슨 쓸모가..) 사용자 친화적 이라기보다 검색봇 친화적인 태그 사용등을 경험하며 사람들이 많이 쓰는 블로그 ex)티스토리, 워드프레스에는 그럴만한 이유가 있다는 생각이 들었다.&lt;/p&gt;

&lt;p&gt;! 감사합니다 !&lt;/p&gt;</content><author><name></name></author><category term="Jekyll" /><category term="Blog" /><summary type="html">한것도 없이 마지막 그렇다 마지막이다 너무 두서 없이 쓴거같고 그냥 휘겨 갈겨 쓴것 같아서 빨리 마무리를 지어야겠다</summary></entry><entry><title type="html">Jekyll로 시작하는 블로그 - 중간</title><link href="/development/blog/first-blog-with-github-and-jekyll2" rel="alternate" type="text/html" title="Jekyll로 시작하는 블로그 - 중간" /><published>2017-12-26T00:00:00+09:00</published><updated>2017-12-26T00:00:00+09:00</updated><id>/development/blog/first-blog-with-github-and-jekyll2</id><content type="html" xml:base="/development/blog/first-blog-with-github-and-jekyll2">&lt;h2 id=&quot;1-웹-개발은-디자인-부터&quot;&gt;1. 웹 개발은 디자인 부터&lt;/h2&gt;
&lt;p&gt;어느정도 프로토타입은 정해두었다. 사실 처음과 지금의 결과물은 상당히 다르다 처음엔 노트형식의 디자인을 기획하게 되었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/postsImg/jekyll-blog-with-github-prototype.png&quot; alt=&quot;이 블로그의 프로토타입&quot; /&gt;&lt;/p&gt;

&lt;p&gt;정말 자주 사용하는 시스템이 있는데 바로 &lt;a href=&quot;https://www.evernote.com&quot;&gt;Evernote&lt;/a&gt;이다 지금도 아이디어를 정리할때 사용하고 있는데 벌써 노트의 수가 70개에 육박한다 상당히 좋은 시스템이고 편리하기 때문에 내가 만약 블로그를 만들때 이렇게 보기 편하면 좋다고 생각햇다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;그러나 에버노트 형식의 블로그의 단점은 분명했다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;일단은 검색 최적화가 힘들었다 노트를 클릭하면 내가 작성한 글들을 모아놓은 데이터를 보고 싶었는데 Jekyll의 시스템상 썸네일 그리고 짧은 글 요약 등을 저장하기가 상당히 귀찮기 때문에 노트 형식의 블로그는 포기하게 되었다.&lt;/p&gt;

&lt;h2 id=&quot;2-컬러를-정하자&quot;&gt;2. 컬러를 정하자&lt;/h2&gt;
&lt;p&gt;예전엔 레이아웃부터 생각햇다면 지금은 컬러부터 정하게 되는것 같다, 메인이 되는 색상인 연분홍 느낌의 #fe9f9f 컬러부터 시작으로 색을 정하게 되었다, 대부분의 글들은 완전한 블랙보다는 #333 ~ 777을 오고가며 만들었다 내 기준에서는 그렇게 하는 부분이 눈이 편하다고 느꼇기 때문이다.&lt;/p&gt;

&lt;p&gt;그렇게 만들어진 블로그의 색상표는 대략적으로&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;강조 - 이 블로그의 메인 색상 그리고 강조에 사용
    &lt;ul&gt;
      &lt;li&gt;컬러표 : #fe9f9f&lt;/li&gt;
      &lt;li&gt;사용처 : 아이덴티티&lt;/li&gt;
      &lt;li&gt;느낌 : 소프트 핑크 (크흠)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;본문 글자색 - 눈이 편한 색상을 사용
    &lt;ul&gt;
      &lt;li&gt;컬러표 : #1b1f29&lt;/li&gt;
      &lt;li&gt;사용처 : 본문&lt;/li&gt;
      &lt;li&gt;느낌 : 그나마 눈이 편한 색 조금 빠진 검정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;H 태그 색상 - 눈이 편한 검정, 두께는 700정도
    &lt;ul&gt;
      &lt;li&gt;컬러표 : #4a4a4a&lt;/li&gt;
      &lt;li&gt;사용처 : H 태그&lt;/li&gt;
      &lt;li&gt;느낌 : 눈이 조금 편한, 조금 색 빠진 검정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이런식으로 컬러표를 정해서 디자인에 나섰다&lt;/p&gt;

&lt;h2 id=&quot;3-레이아웃을-정하자&quot;&gt;3. 레이아웃을 정하자&lt;/h2&gt;
&lt;p&gt;index.html 즉 메인이 되는 레이아웃을 먼저 짜야 했다, 레이아웃은 상당 부분 evernote의 영향을 많이 받았다, 기존에는 좌측에서 열리는 notes의 목록으로 선택해서 해당 포스트에 들어가는 정말 나의 노트를 훔처보는 느낌으로 디자인 하고 싶었다.&lt;/p&gt;

&lt;p&gt;그러나 글씨의 미리보기나 위에서 내려오는 무엇을 사용하더래도 굳이 써야할 이유를 느끼지 못했다 왜냐면 글의 미리보기가 너무 많으면 검색결과에 노출이 안되기 때문에 그리고 썸네일등 힘든게 많기 때문에 목록에서 선택하는 부분을 조금 바꿔서 만들게 되었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;그러나 글이 많아지면 아무런 의미가 없을것 같다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;4-처음-만나는-ruby&quot;&gt;4. 처음 만나는 Ruby?&lt;/h2&gt;
&lt;p&gt;그러나 아예 Ruby언어를 모르는 나에게는 조금 어렵게 다가왔다 그러나 대부분의 문법은 ejs에서 사용해본 것들과 비슷했다 물론 Vue.js와도 말이다&lt;/p&gt;

&lt;p&gt;지킬 공식 가이드북을 가면 자세히 나와있다 가령 - page.title 이라는 간단한 코드로도 타이틀을 가져올 수 있다 이미 내부적으로 그런 모든것들이 다 구현되어있기 때문인데 이런 점들이 지킬에 블로그를 올리는데 정말 많은 도움이 된다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/moonjong93/moonjong93.github.io&quot;&gt;깃허브&lt;/a&gt; 이곳에 방문하면 모든 코드가 보관 중이니… 굳이 보고 싶으시다면 보시는것도 추천한다&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;다음 글은 이제 코드를 보면서 마지막으로 어떻게 만들었는지 알아보겠다.&lt;/p&gt;</content><author><name></name></author><category term="Jekyll" /><category term="Blog" /><summary type="html">1. 웹 개발은 디자인 부터 어느정도 프로토타입은 정해두었다. 사실 처음과 지금의 결과물은 상당히 다르다 처음엔 노트형식의 디자인을 기획하게 되었다.</summary></entry><entry><title type="html">Jekyll로 시작하는 블로그 - 프롤로그</title><link href="/development/blog/first-blog-with-github-and-jekyll" rel="alternate" type="text/html" title="Jekyll로 시작하는 블로그 - 프롤로그" /><published>2017-12-25T00:00:00+09:00</published><updated>2017-12-25T00:00:00+09:00</updated><id>/development/blog/first-blog-with-github-and-jekyll</id><content type="html" xml:base="/development/blog/first-blog-with-github-and-jekyll">&lt;h2 id=&quot;1-시작은-창대하였으나-끝은-미약하다&quot;&gt;1. 시작은 창대하였으나 끝은 미약하다&lt;/h2&gt;

&lt;p&gt;맨 처음 블로그를 만드려고 마음을 먹었을때 생각은 ‘전부다 내가 만들거야!!’라고 생각했다 마치 아따아따의 단비처럼 말이다. 그러나 알지 못했다 그 일이 상당히 무거운 일임을,&lt;/p&gt;

&lt;p&gt;사실 이번 포스팅엔 잘 하면 Jekyll에 관한 언급은 안들어갈지도 모른다 왜냐면 정말 긴 시간을 할애하고 나서야 비로소 Jekyll에 블로그를 하겠다고 마음을 먹었기 때문이다.&lt;/p&gt;

&lt;h2 id=&quot;2-vuejs와-firebase를-사용해서-블로그를-만들자&quot;&gt;2. Vue.js와 Firebase를 사용해서 블로그를 만들자!&lt;/h2&gt;

&lt;p&gt;그렇다 내가 근 한주를 소비하게된 바보같은 생각이었다, 물론 사실 완성 근처 간계까지 갔다 여기서 잠깐, Firebase에 대해서 잠깐 언급하자면 리얼타임 Database를 서버사이드 없이 프론트엔드에서만으로도 조작이 가능하며 그런 서비스를 제공하는 업체이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/postsImg/vue-and-firebase.png&quot; alt=&quot;vue.js logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아무튼 나는 Vue.js를 입문하면서 무언가 하나 그리고 나름 괜찮은 시스템을 만들어보고 싶었다, 프레임워크에 입문하면 열심히 문서를 뒤지는 것보다는 개인적으로는 직접 프로젝트를 하면서 느끼는게 좋다고 생각해서 그런 생각을 하게 되었는데 결과적으로 블로그를 만드는데는 그런 플랫폼을 이용하는게 좋다 워드프레스나 티스토리,텀블러,네이버 등 정말 많은 플랫폼이 있는데 나는 굳이…. 내가 직접 만들어 쓰겠다고 생각했다, 그러나 상당히 불편한 점이 많았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/postsImg/almost-blog-with-vue.png&quot; alt=&quot;만드려고 했던 블로그의 거의 완성본&quot; /&gt;&lt;/p&gt;
&lt;center&gt;&amp;lt; 나름 이미지 삽입도 넣으며 준수한 기능을 만들었다&amp;gt;&lt;/center&gt;

&lt;p&gt;contenteditable - 태그를 활용해서 이미지 삽입이나 좌우 정렬 그리고 태그부분까지 만들고 실제로 글도 잘 올라가며 &lt;a href=&quot;https://support.google.com/webmasters/answer/6066468?hl=ko&quot;&gt;구글 크롤러 테스트&lt;/a&gt;에도 잘 노출이 됨을 확인 할 수 있었다. 그러나 이제 배포만 하면 되는 순간에서 생각해 보니 문서 편집기능도 마음에 들지않고 무엇보다 글의 정보를 동기적으로 가져오다보니(firebase) 굳이 이렇게 까지 만들 필요가 있나? 라는 생각이 들었다&lt;/p&gt;

&lt;p&gt;일단은 검색에 누락될 확률이 정말 높다, 그리고 이를 제외해도 Vue.js는 서버사이드 렌더링이 없다면 크롤러 대부분은 이 사이트에 무슨 글이 있는지도 인식하지 못한다 물론 서버사이드 렌더링을 하면 된다지만 그럴거면 왜 굳이 처음부터 Firebase를….&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;필요 없는 기능이 너무 덕지덕지 있다면 그냥 새로 만드는게 났다는 결론이 났다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3-그렇게-정하게된-jekyll&quot;&gt;3. 그렇게 정하게된 Jekyll&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/postsImg/jekyll-logo.png&quot; alt=&quot;jekyll logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;사실 Jekyll이 사용하는 Ruby는 정말 생소한 언어였다 물론 오며가며 들어본 경험은 있다 그러나 일본의 개발자가 만들었다는 얘기 정도기에 거의 모르는 수준이었다 그러나 약 3일간의 투자로 이 블로그를 만들 수 있게 되었다.&lt;/p&gt;

&lt;p&gt;Jekyll의 가이드는 사실 &lt;a href=&quot;https://jekyllrb-ko.github.io/&quot;&gt;지킬의 공식문서&lt;/a&gt;만 보면 모든게 이해가 가능하다, 그리고 레퍼런스 삼을 테마를 하나 구하면 좋은데 나는 엄청 심플한 &lt;a href=&quot;http://jekyllthemes.org/themes/windows-95/&quot;&gt;windows95-Theme&lt;/a&gt;를 레퍼런스 삼아 작업을 했다.&lt;/p&gt;</content><author><name></name></author><category term="Jekyll" /><category term="Blog" /><summary type="html">1. 시작은 창대하였으나 끝은 미약하다</summary></entry><entry><title type="html">구글의 검색창이 업데이트 되었다</title><link href="/record/google-has-update-design" rel="alternate" type="text/html" title="구글의 검색창이 업데이트 되었다" /><published>2017-12-25T00:00:00+09:00</published><updated>2017-12-25T00:00:00+09:00</updated><id>/record/google-has-update-design</id><content type="html" xml:base="/record/google-has-update-design">&lt;p&gt;며칠전 구글 검색 결과의 디자인이 조금 변경되었다, 아마 가독성을 높이기 위한 업데이트인것 같은데 요약해보자면,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;폰트변경
    &lt;ul&gt;
      &lt;li&gt;Apple SD Gothic Neo으로 변경&lt;/li&gt;
      &lt;li&gt;Font-Weight 역시 400으로 업데이트&lt;/li&gt;
      &lt;li&gt;#1967d2 색상으로 약간 밝은&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이정도인데 가독성이 확실히 좋아지는것 같다, 기존에 검색결과가 약간은 네이버보다 후진?듯한 모습을 보여줬지만(하지만 편의성에서는 이부분이 훨씬 났다고 봄) 이번 업데이트로 조금은 세련된 느낌을 갖게된것 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/postsImg/google-serach.png&quot; alt=&quot;google-serach-result&quot; /&gt;&lt;/p&gt;

&lt;p&gt;딱히 예전 이미지를 가지고 있지 않아서 확실히 확인해보긴 어렵지만 아무튼 확실히 변하긴 했음,&lt;/p&gt;

&lt;p&gt;가끔 이런 업데이트를 보면 웹디자인의 변화가 너무 빠르다고 생각이 든다, 불과 2년전 만든 웹사이트만 봐도(업데이트가 전혀 안되었다면) 약간은 올드하다고 느껴지는데 지금은 머터리얼 디자인이 유행이라면 당장 한달뒤에는 어떤 디자인이 유행을 할까?&lt;/p&gt;</content><author><name></name></author><category term="Google" /><category term="Design" /><summary type="html">며칠전 구글 검색 결과의 디자인이 조금 변경되었다, 아마 가독성을 높이기 위한 업데이트인것 같은데 요약해보자면,</summary></entry><entry><title type="html">지킬과 함께 블로그를 시작합니다!</title><link href="/life/star-blog-with-jekyll" rel="alternate" type="text/html" title="지킬과 함께 블로그를 시작합니다!" /><published>2017-12-23T00:00:00+09:00</published><updated>2017-12-23T00:00:00+09:00</updated><id>/life/star-blog-with-jekyll</id><content type="html" xml:base="/life/star-blog-with-jekyll">&lt;h2 id=&quot;1-블로그에-대해서&quot;&gt;1. 블로그에 대해서&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;블로그를 만드는데 이렇게 오랜 시간을 할애하게 될 줄 몰랐습니다. 약 8일이나 걸렸는데요 처음 만나보는 생소한 문법들.. 그리고 그 무엇보다 블로그에 대한 고민으로 많은 시간을 할애하게 되었습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;무슨 고민?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;사실 고민이 상당히 많았기에 약간의 목차 형식으로 이렇게 정리해 봅니다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SEO 최적화에 관한 고민
    &lt;ul&gt;
      &lt;li&gt;노출이 안 되면 굳이 할 이유가..&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Vue.js를 배우면서 허황된 꿈을 꾸게 됨
    &lt;ul&gt;
      &lt;li&gt;이걸로 5일은 사용함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;시작은 Node.js + Vue.js&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;대부분의 고민은 혼자서 다 해보고 싶어서 생긴 문제였습니다 Node.js와 깃허브 호스팅을 이용해 블로그를 만드는데 2일 정도 그러나 서버사이드가 분리 되어있다 보니 서버사이드 렌더링은 꿈꾸기 힘든 상황 -&amp;gt; 노출이 안 될게 뻔함&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Firebase + Vue.js&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;제대로 Firebase를 사용 해 본건 처음 이었습니다. 과거 우연히 접한 Firebase는 서버알못인 저에게 엄청난 희망처럼 다가왔죠 그러나 이번에 제대로 사용 해 보니 오히려 불편한 점이 많았습니다, 은근히 찾기 힘든 정보들과 조금은 생소한 리얼타임 데이터베이스…. 더군다나 아무리 생각해도 서버사이드 렌더 부족으로 검색에 누락될게 뻔했습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Jekyll에 입문&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;입문이라는 거창한 표현을 사용하긴 그렇지만 아예 Ruby언어를 사용해본 적 없는 저에게는 입문과도 마찬가지였습니다. 신기한 점은 언어의 Syntax가 기존에 사용해본 ejs와 하물며 vue의 데이터 활용과도 비슷해서 신기하게 느껴졌고 컴퓨터 언어는 거기서 거기라는 생각도 해보게 되었습니다&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;그래서 이 블로그는 지킬의 도움을 받았지만 CSS부터 HTML전-부 제가 작성했습니다, 기존에 제가 좋아하던 컬러나 구글 아날리틱스 그리고 disqus의 댓글 기능까지 장착하고 최근 댓글까지 만들 수 있어서 나름 재밌는 경험이었습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jekyllrb-ko.github.io/&quot;&gt;지킬 공식 블로그&lt;/a&gt; 문서는 상당히 보기 편하게 작성되어 있으며 모든 부분 한글로 작성이 되어있기 때문에 처음 입문을 하더래도 빠르게 적응 할 수 있었습니다, 특히 테마 다운로드 사이트에서 다운 받은 &lt;a href=&quot;http://jekyllthemes.org/themes/windows-95/&quot;&gt;Windows95 테마&lt;/a&gt;를 레퍼런스 삼아 계속 보면서 작성했는데요 이렇게 레퍼런스가 되는 작은 규모의 테마를 보고 따라 해본 것이, 빨리 지킬을 익힐 수 있는데 도움이 되었습니다&lt;/p&gt;

&lt;p&gt;아무튼 크리스마스 전에 만들어서 정말 다행입니다! 크리스마스엔…. 블로그에 글이라도 쓸 수 있으니까요………&lt;/p&gt;</content><author><name></name></author><category term="Jekyll" /><category term="Blog" /><summary type="html">1. 블로그에 대해서 블로그를 만드는데 이렇게 오랜 시간을 할애하게 될 줄 몰랐습니다. 약 8일이나 걸렸는데요 처음 만나보는 생소한 문법들.. 그리고 그 무엇보다 블로그에 대한 고민으로 많은 시간을 할애하게 되었습니다.</summary></entry><entry><title type="html">백엔드 그리고 프론트엔드 - 작성중</title><link href="/life/serverside-and-frontside" rel="alternate" type="text/html" title="백엔드 그리고 프론트엔드 - 작성중" /><published>2017-01-01T00:00:00+09:00</published><updated>2017-01-01T00:00:00+09:00</updated><id>/life/serverside-and-frontside</id><content type="html" xml:base="/life/serverside-and-frontside">&lt;p&gt;Vue.js는 정적인 웹을 만들어 준다 그러나 처음 부터 짱미있는 데이터 즉 블로그와 같이 정적인 파일을 주려면&lt;/p&gt;

&lt;h2 id=&quot;고민의-시작&quot;&gt;고민의 시작&lt;/h2&gt;
&lt;p&gt;나름 깊이 있는 고민을 시작한 것은 조금 시간이 지났다. 서버와 그리고 프론트 사이드까지 제일 처음 웹 개발에 입문한 것은 물론 Node.js지만 아무리 서버에서 양질의 데이터 그리고 좋은 결과를 만들어 낸들, 보지 않으면 아무런 의미가 없다고 생각했었다.&lt;/p&gt;

&lt;h3 id=&quot;프론트엔드도-한번-배워보자&quot;&gt;“프론트엔드도 한번 배워보자”&lt;/h3&gt;
&lt;p&gt;가벼운 마음으로 시작한&lt;/p&gt;</content><author><name></name></author><category term="Node.js" /><category term="Vue.js" /><summary type="html">Vue.js는 정적인 웹을 만들어 준다 그러나 처음 부터 짱미있는 데이터 즉 블로그와 같이 정적인 파일을 주려면</summary></entry></feed>